{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n    const pickedDate = selectedDates[0];\n      if (pickedDate <= new Date()) {\n        startBtn.disabled = true;\n        iziToast.warning({\n          title: 'Warning',\n          message: 'Please choose a date in the future',\n          position: 'topRight',\n        });\n      } else {\n        userSelectedDate = pickedDate;\n        startBtn.disabled = false;\n      }\n    },\n  };\n\nflatpickr(input, options);\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  input.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const delta = userSelectedDate - now;\n\n    if (delta <= 0) {\n      clearInterval(timerId);\n      updateTimerUI(0);\n      input.disabled = false;\n      return;\n    }\n\n    updateTimerUI(delta);\n  }, 1000);\n});\n\nfunction updateTimerUI(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysElement.textContent = addLeadingZero(days);\n  hoursElement.textContent = addLeadingZero(hours);\n  minutesElement.textContent = addLeadingZero(minutes);\n  secondsElement.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}"],"names":["startBtn","input","daysElement","hoursElement","minutesElement","secondsElement","userSelectedDate","timerId","options","selectedDates","pickedDate","iziToast","flatpickr","delta","updateTimerUI","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"2GAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EAAmB,KACnBC,EAAU,KAEd,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACvB,MAAMC,EAAaD,EAAc,CAAC,EAC5BC,GAAc,IAAI,MACpBV,EAAS,SAAW,GACpBW,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qCACT,SAAU,UACpB,CAAS,IAEDL,EAAmBI,EACnBV,EAAS,SAAW,GAEvB,CACL,EAEAY,EAAUX,EAAOO,CAAO,EAExBR,EAAS,iBAAiB,QAAS,IAAM,CAClCM,IAELN,EAAS,SAAW,GACpBC,EAAM,SAAW,GAEjBM,EAAU,YAAY,IAAM,CAE1B,MAAMM,EAAQP,EADF,IAAI,KAGhB,GAAIO,GAAS,EAAG,CACd,cAAcN,CAAO,EACrBO,EAAc,CAAC,EACfb,EAAM,SAAW,GACjB,MACD,CAEDa,EAAcD,CAAK,CACpB,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAcC,EAAI,CACzB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDb,EAAY,YAAcmB,EAAeL,CAAI,EAC7Cb,EAAa,YAAckB,EAAeJ,CAAK,EAC/Cb,EAAe,YAAciB,EAAeH,CAAO,EACnDb,EAAe,YAAcgB,EAAeF,CAAO,CACrD,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}